
from hex_board import HexBoard
from MonteCarlo.random_player import RandomPlayer
import random

class Stat:
    def __init__(self):
        self.w = 0 # Number of times this movement has been made and the game winned
        self.n = 0 # Numbers of times this movement has been made


import shelve

#d = shelve.open("moves_statistics.txt")
#moves_statistics = []
#if "moves" in d:
#    moves_statistics = d["moves"]
#else:
moves_statistics = {
    (0, 0, 0, 0, 0, 0): Stat(),
    (0, 0, 0, 0, 0, 1): Stat(),
    (0, 0, 0, 0, 0, 2): Stat(),
    (0, 0, 0, 0, 1, 0): Stat(),
    (0, 0, 0, 0, 1, 1): Stat(),
    (0, 0, 0, 0, 1, 2): Stat(),
    (0, 0, 0, 0, 2, 0): Stat(),
    (0, 0, 0, 0, 2, 1): Stat(),
    (0, 0, 0, 0, 2, 2): Stat(),
    (0, 0, 0, 1, 0, 0): Stat(),
    (0, 0, 0, 1, 0, 1): Stat(),
    (0, 0, 0, 1, 0, 2): Stat(),
    (0, 0, 0, 1, 1, 0): Stat(),
    (0, 0, 0, 1, 1, 1): Stat(),
    (0, 0, 0, 1, 1, 2): Stat(),
    (0, 0, 0, 1, 2, 0): Stat(),
    (0, 0, 0, 1, 2, 1): Stat(),
    (0, 0, 0, 1, 2, 2): Stat(),
    (0, 0, 0, 2, 0, 0): Stat(),
    (0, 0, 0, 2, 0, 1): Stat(),
    (0, 0, 0, 2, 0, 2): Stat(),
    (0, 0, 0, 2, 1, 0): Stat(),
    (0, 0, 0, 2, 1, 1): Stat(),
    (0, 0, 0, 2, 1, 2): Stat(),
    (0, 0, 0, 2, 2, 0): Stat(),
    (0, 0, 0, 2, 2, 1): Stat(),
    (0, 0, 0, 2, 2, 2): Stat(),
    (0, 0, 1, 0, 0, 0): Stat(),
    (0, 0, 1, 0, 0, 1): Stat(),
    (0, 0, 1, 0, 0, 2): Stat(),
    (0, 0, 1, 0, 1, 0): Stat(),
    (0, 0, 1, 0, 1, 1): Stat(),
    (0, 0, 1, 0, 1, 2): Stat(),
    (0, 0, 1, 0, 2, 0): Stat(),
    (0, 0, 1, 0, 2, 1): Stat(),
    (0, 0, 1, 0, 2, 2): Stat(),
    (0, 0, 1, 1, 0, 0): Stat(),
    (0, 0, 1, 1, 0, 1): Stat(),
    (0, 0, 1, 1, 0, 2): Stat(),
    (0, 0, 1, 1, 1, 0): Stat(),
    (0, 0, 1, 1, 1, 1): Stat(),
    (0, 0, 1, 1, 1, 2): Stat(),
    (0, 0, 1, 1, 2, 0): Stat(),
    (0, 0, 1, 1, 2, 1): Stat(),
    (0, 0, 1, 1, 2, 2): Stat(),
    (0, 0, 1, 2, 0, 0): Stat(),
    (0, 0, 1, 2, 0, 1): Stat(),
    (0, 0, 1, 2, 0, 2): Stat(),
    (0, 0, 1, 2, 1, 0): Stat(),
    (0, 0, 1, 2, 1, 1): Stat(),
    (0, 0, 1, 2, 1, 2): Stat(),
    (0, 0, 1, 2, 2, 0): Stat(),
    (0, 0, 1, 2, 2, 1): Stat(),
    (0, 0, 1, 2, 2, 2): Stat(),
    (0, 0, 2, 0, 0, 0): Stat(),
    (0, 0, 2, 0, 0, 1): Stat(),
    (0, 0, 2, 0, 0, 2): Stat(),
    (0, 0, 2, 0, 1, 0): Stat(),
    (0, 0, 2, 0, 1, 1): Stat(),
    (0, 0, 2, 0, 1, 2): Stat(),
    (0, 0, 2, 0, 2, 0): Stat(),
    (0, 0, 2, 0, 2, 1): Stat(),
    (0, 0, 2, 0, 2, 2): Stat(),
    (0, 0, 2, 1, 0, 0): Stat(),
    (0, 0, 2, 1, 0, 1): Stat(),
    (0, 0, 2, 1, 0, 2): Stat(),
    (0, 0, 2, 1, 1, 0): Stat(),
    (0, 0, 2, 1, 1, 1): Stat(),
    (0, 0, 2, 1, 1, 2): Stat(),
    (0, 0, 2, 1, 2, 0): Stat(),
    (0, 0, 2, 1, 2, 1): Stat(),
    (0, 0, 2, 1, 2, 2): Stat(),
    (0, 0, 2, 2, 0, 0): Stat(),
    (0, 0, 2, 2, 0, 1): Stat(),
    (0, 0, 2, 2, 0, 2): Stat(),
    (0, 0, 2, 2, 1, 0): Stat(),
    (0, 0, 2, 2, 1, 1): Stat(),
    (0, 0, 2, 2, 1, 2): Stat(),
    (0, 0, 2, 2, 2, 0): Stat(),
    (0, 0, 2, 2, 2, 1): Stat(),
    (0, 0, 2, 2, 2, 2): Stat(),
    (0, 1, 0, 0, 0, 0): Stat(),
    (0, 1, 0, 0, 0, 1): Stat(),
    (0, 1, 0, 0, 0, 2): Stat(),
    (0, 1, 0, 0, 1, 0): Stat(),
    (0, 1, 0, 0, 1, 1): Stat(),
    (0, 1, 0, 0, 1, 2): Stat(),
    (0, 1, 0, 0, 2, 0): Stat(),
    (0, 1, 0, 0, 2, 1): Stat(),
    (0, 1, 0, 0, 2, 2): Stat(),
    (0, 1, 0, 1, 0, 0): Stat(),
    (0, 1, 0, 1, 0, 1): Stat(),
    (0, 1, 0, 1, 0, 2): Stat(),
    (0, 1, 0, 1, 1, 0): Stat(),
    (0, 1, 0, 1, 1, 1): Stat(),
    (0, 1, 0, 1, 1, 2): Stat(),
    (0, 1, 0, 1, 2, 0): Stat(),
    (0, 1, 0, 1, 2, 1): Stat(),
    (0, 1, 0, 1, 2, 2): Stat(),
    (0, 1, 0, 2, 0, 0): Stat(),
    (0, 1, 0, 2, 0, 1): Stat(),
    (0, 1, 0, 2, 0, 2): Stat(),
    (0, 1, 0, 2, 1, 0): Stat(),
    (0, 1, 0, 2, 1, 1): Stat(),
    (0, 1, 0, 2, 1, 2): Stat(),
    (0, 1, 0, 2, 2, 0): Stat(),
    (0, 1, 0, 2, 2, 1): Stat(),
    (0, 1, 0, 2, 2, 2): Stat(),
    (0, 1, 1, 0, 0, 0): Stat(),
    (0, 1, 1, 0, 0, 1): Stat(),
    (0, 1, 1, 0, 0, 2): Stat(),
    (0, 1, 1, 0, 1, 0): Stat(),
    (0, 1, 1, 0, 1, 1): Stat(),
    (0, 1, 1, 0, 1, 2): Stat(),
    (0, 1, 1, 0, 2, 0): Stat(),
    (0, 1, 1, 0, 2, 1): Stat(),
    (0, 1, 1, 0, 2, 2): Stat(),
    (0, 1, 1, 1, 0, 0): Stat(),
    (0, 1, 1, 1, 0, 1): Stat(),
    (0, 1, 1, 1, 0, 2): Stat(),
    (0, 1, 1, 1, 1, 0): Stat(),
    (0, 1, 1, 1, 1, 1): Stat(),
    (0, 1, 1, 1, 1, 2): Stat(),
    (0, 1, 1, 1, 2, 0): Stat(),
    (0, 1, 1, 1, 2, 1): Stat(),
    (0, 1, 1, 1, 2, 2): Stat(),
    (0, 1, 1, 2, 0, 0): Stat(),
    (0, 1, 1, 2, 0, 1): Stat(),
    (0, 1, 1, 2, 0, 2): Stat(),
    (0, 1, 1, 2, 1, 0): Stat(),
    (0, 1, 1, 2, 1, 1): Stat(),
    (0, 1, 1, 2, 1, 2): Stat(),
    (0, 1, 1, 2, 2, 0): Stat(),
    (0, 1, 1, 2, 2, 1): Stat(),
    (0, 1, 1, 2, 2, 2): Stat(),
    (0, 1, 2, 0, 0, 0): Stat(),
    (0, 1, 2, 0, 0, 1): Stat(),
    (0, 1, 2, 0, 0, 2): Stat(),
    (0, 1, 2, 0, 1, 0): Stat(),
    (0, 1, 2, 0, 1, 1): Stat(),
    (0, 1, 2, 0, 1, 2): Stat(),
    (0, 1, 2, 0, 2, 0): Stat(),
    (0, 1, 2, 0, 2, 1): Stat(),
    (0, 1, 2, 0, 2, 2): Stat(),
    (0, 1, 2, 1, 0, 0): Stat(),
    (0, 1, 2, 1, 0, 1): Stat(),
    (0, 1, 2, 1, 0, 2): Stat(),
    (0, 1, 2, 1, 1, 0): Stat(),
    (0, 1, 2, 1, 1, 1): Stat(),
    (0, 1, 2, 1, 1, 2): Stat(),
    (0, 1, 2, 1, 2, 0): Stat(),
    (0, 1, 2, 1, 2, 1): Stat(),
    (0, 1, 2, 1, 2, 2): Stat(),
    (0, 1, 2, 2, 0, 0): Stat(),
    (0, 1, 2, 2, 0, 1): Stat(),
    (0, 1, 2, 2, 0, 2): Stat(),
    (0, 1, 2, 2, 1, 0): Stat(),
    (0, 1, 2, 2, 1, 1): Stat(),
    (0, 1, 2, 2, 1, 2): Stat(),
    (0, 1, 2, 2, 2, 0): Stat(),
    (0, 1, 2, 2, 2, 1): Stat(),
    (0, 1, 2, 2, 2, 2): Stat(),
    (0, 2, 0, 0, 0, 0): Stat(),
    (0, 2, 0, 0, 0, 1): Stat(),
    (0, 2, 0, 0, 0, 2): Stat(),
    (0, 2, 0, 0, 1, 0): Stat(),
    (0, 2, 0, 0, 1, 1): Stat(),
    (0, 2, 0, 0, 1, 2): Stat(),
    (0, 2, 0, 0, 2, 0): Stat(),
    (0, 2, 0, 0, 2, 1): Stat(),
    (0, 2, 0, 0, 2, 2): Stat(),
    (0, 2, 0, 1, 0, 0): Stat(),
    (0, 2, 0, 1, 0, 1): Stat(),
    (0, 2, 0, 1, 0, 2): Stat(),
    (0, 2, 0, 1, 1, 0): Stat(),
    (0, 2, 0, 1, 1, 1): Stat(),
    (0, 2, 0, 1, 1, 2): Stat(),
    (0, 2, 0, 1, 2, 0): Stat(),
    (0, 2, 0, 1, 2, 1): Stat(),
    (0, 2, 0, 1, 2, 2): Stat(),
    (0, 2, 0, 2, 0, 0): Stat(),
    (0, 2, 0, 2, 0, 1): Stat(),
    (0, 2, 0, 2, 0, 2): Stat(),
    (0, 2, 0, 2, 1, 0): Stat(),
    (0, 2, 0, 2, 1, 1): Stat(),
    (0, 2, 0, 2, 1, 2): Stat(),
    (0, 2, 0, 2, 2, 0): Stat(),
    (0, 2, 0, 2, 2, 1): Stat(),
    (0, 2, 0, 2, 2, 2): Stat(),
    (0, 2, 1, 0, 0, 0): Stat(),
    (0, 2, 1, 0, 0, 1): Stat(),
    (0, 2, 1, 0, 0, 2): Stat(),
    (0, 2, 1, 0, 1, 0): Stat(),
    (0, 2, 1, 0, 1, 1): Stat(),
    (0, 2, 1, 0, 1, 2): Stat(),
    (0, 2, 1, 0, 2, 0): Stat(),
    (0, 2, 1, 0, 2, 1): Stat(),
    (0, 2, 1, 0, 2, 2): Stat(),
    (0, 2, 1, 1, 0, 0): Stat(),
    (0, 2, 1, 1, 0, 1): Stat(),
    (0, 2, 1, 1, 0, 2): Stat(),
    (0, 2, 1, 1, 1, 0): Stat(),
    (0, 2, 1, 1, 1, 1): Stat(),
    (0, 2, 1, 1, 1, 2): Stat(),
    (0, 2, 1, 1, 2, 0): Stat(),
    (0, 2, 1, 1, 2, 1): Stat(),
    (0, 2, 1, 1, 2, 2): Stat(),
    (0, 2, 1, 2, 0, 0): Stat(),
    (0, 2, 1, 2, 0, 1): Stat(),
    (0, 2, 1, 2, 0, 2): Stat(),
    (0, 2, 1, 2, 1, 0): Stat(),
    (0, 2, 1, 2, 1, 1): Stat(),
    (0, 2, 1, 2, 1, 2): Stat(),
    (0, 2, 1, 2, 2, 0): Stat(),
    (0, 2, 1, 2, 2, 1): Stat(),
    (0, 2, 1, 2, 2, 2): Stat(),
    (0, 2, 2, 0, 0, 0): Stat(),
    (0, 2, 2, 0, 0, 1): Stat(),
    (0, 2, 2, 0, 0, 2): Stat(),
    (0, 2, 2, 0, 1, 0): Stat(),
    (0, 2, 2, 0, 1, 1): Stat(),
    (0, 2, 2, 0, 1, 2): Stat(),
    (0, 2, 2, 0, 2, 0): Stat(),
    (0, 2, 2, 0, 2, 1): Stat(),
    (0, 2, 2, 0, 2, 2): Stat(),
    (0, 2, 2, 1, 0, 0): Stat(),
    (0, 2, 2, 1, 0, 1): Stat(),
    (0, 2, 2, 1, 0, 2): Stat(),
    (0, 2, 2, 1, 1, 0): Stat(),
    (0, 2, 2, 1, 1, 1): Stat(),
    (0, 2, 2, 1, 1, 2): Stat(),
    (0, 2, 2, 1, 2, 0): Stat(),
    (0, 2, 2, 1, 2, 1): Stat(),
    (0, 2, 2, 1, 2, 2): Stat(),
    (0, 2, 2, 2, 0, 0): Stat(),
    (0, 2, 2, 2, 0, 1): Stat(),
    (0, 2, 2, 2, 0, 2): Stat(),
    (0, 2, 2, 2, 1, 0): Stat(),
    (0, 2, 2, 2, 1, 1): Stat(),
    (0, 2, 2, 2, 1, 2): Stat(),
    (0, 2, 2, 2, 2, 0): Stat(),
    (0, 2, 2, 2, 2, 1): Stat(),
    (0, 2, 2, 2, 2, 2): Stat(),
    (1, 0, 0, 0, 0, 0): Stat(),
    (1, 0, 0, 0, 0, 1): Stat(),
    (1, 0, 0, 0, 0, 2): Stat(),
    (1, 0, 0, 0, 1, 0): Stat(),
    (1, 0, 0, 0, 1, 1): Stat(),
    (1, 0, 0, 0, 1, 2): Stat(),
    (1, 0, 0, 0, 2, 0): Stat(),
    (1, 0, 0, 0, 2, 1): Stat(),
    (1, 0, 0, 0, 2, 2): Stat(),
    (1, 0, 0, 1, 0, 0): Stat(),
    (1, 0, 0, 1, 0, 1): Stat(),
    (1, 0, 0, 1, 0, 2): Stat(),
    (1, 0, 0, 1, 1, 0): Stat(),
    (1, 0, 0, 1, 1, 1): Stat(),
    (1, 0, 0, 1, 1, 2): Stat(),
    (1, 0, 0, 1, 2, 0): Stat(),
    (1, 0, 0, 1, 2, 1): Stat(),
    (1, 0, 0, 1, 2, 2): Stat(),
    (1, 0, 0, 2, 0, 0): Stat(),
    (1, 0, 0, 2, 0, 1): Stat(),
    (1, 0, 0, 2, 0, 2): Stat(),
    (1, 0, 0, 2, 1, 0): Stat(),
    (1, 0, 0, 2, 1, 1): Stat(),
    (1, 0, 0, 2, 1, 2): Stat(),
    (1, 0, 0, 2, 2, 0): Stat(),
    (1, 0, 0, 2, 2, 1): Stat(),
    (1, 0, 0, 2, 2, 2): Stat(),
    (1, 0, 1, 0, 0, 0): Stat(),
    (1, 0, 1, 0, 0, 1): Stat(),
    (1, 0, 1, 0, 0, 2): Stat(),
    (1, 0, 1, 0, 1, 0): Stat(),
    (1, 0, 1, 0, 1, 1): Stat(),
    (1, 0, 1, 0, 1, 2): Stat(),
    (1, 0, 1, 0, 2, 0): Stat(),
    (1, 0, 1, 0, 2, 1): Stat(),
    (1, 0, 1, 0, 2, 2): Stat(),
    (1, 0, 1, 1, 0, 0): Stat(),
    (1, 0, 1, 1, 0, 1): Stat(),
    (1, 0, 1, 1, 0, 2): Stat(),
    (1, 0, 1, 1, 1, 0): Stat(),
    (1, 0, 1, 1, 1, 1): Stat(),
    (1, 0, 1, 1, 1, 2): Stat(),
    (1, 0, 1, 1, 2, 0): Stat(),
    (1, 0, 1, 1, 2, 1): Stat(),
    (1, 0, 1, 1, 2, 2): Stat(),
    (1, 0, 1, 2, 0, 0): Stat(),
    (1, 0, 1, 2, 0, 1): Stat(),
    (1, 0, 1, 2, 0, 2): Stat(),
    (1, 0, 1, 2, 1, 0): Stat(),
    (1, 0, 1, 2, 1, 1): Stat(),
    (1, 0, 1, 2, 1, 2): Stat(),
    (1, 0, 1, 2, 2, 0): Stat(),
    (1, 0, 1, 2, 2, 1): Stat(),
    (1, 0, 1, 2, 2, 2): Stat(),
    (1, 0, 2, 0, 0, 0): Stat(),
    (1, 0, 2, 0, 0, 1): Stat(),
    (1, 0, 2, 0, 0, 2): Stat(),
    (1, 0, 2, 0, 1, 0): Stat(),
    (1, 0, 2, 0, 1, 1): Stat(),
    (1, 0, 2, 0, 1, 2): Stat(),
    (1, 0, 2, 0, 2, 0): Stat(),
    (1, 0, 2, 0, 2, 1): Stat(),
    (1, 0, 2, 0, 2, 2): Stat(),
    (1, 0, 2, 1, 0, 0): Stat(),
    (1, 0, 2, 1, 0, 1): Stat(),
    (1, 0, 2, 1, 0, 2): Stat(),
    (1, 0, 2, 1, 1, 0): Stat(),
    (1, 0, 2, 1, 1, 1): Stat(),
    (1, 0, 2, 1, 1, 2): Stat(),
    (1, 0, 2, 1, 2, 0): Stat(),
    (1, 0, 2, 1, 2, 1): Stat(),
    (1, 0, 2, 1, 2, 2): Stat(),
    (1, 0, 2, 2, 0, 0): Stat(),
    (1, 0, 2, 2, 0, 1): Stat(),
    (1, 0, 2, 2, 0, 2): Stat(),
    (1, 0, 2, 2, 1, 0): Stat(),
    (1, 0, 2, 2, 1, 1): Stat(),
    (1, 0, 2, 2, 1, 2): Stat(),
    (1, 0, 2, 2, 2, 0): Stat(),
    (1, 0, 2, 2, 2, 1): Stat(),
    (1, 0, 2, 2, 2, 2): Stat(),
    (1, 1, 0, 0, 0, 0): Stat(),
    (1, 1, 0, 0, 0, 1): Stat(),
    (1, 1, 0, 0, 0, 2): Stat(),
    (1, 1, 0, 0, 1, 0): Stat(),
    (1, 1, 0, 0, 1, 1): Stat(),
    (1, 1, 0, 0, 1, 2): Stat(),
    (1, 1, 0, 0, 2, 0): Stat(),
    (1, 1, 0, 0, 2, 1): Stat(),
    (1, 1, 0, 0, 2, 2): Stat(),
    (1, 1, 0, 1, 0, 0): Stat(),
    (1, 1, 0, 1, 0, 1): Stat(),
    (1, 1, 0, 1, 0, 2): Stat(),
    (1, 1, 0, 1, 1, 0): Stat(),
    (1, 1, 0, 1, 1, 1): Stat(),
    (1, 1, 0, 1, 1, 2): Stat(),
    (1, 1, 0, 1, 2, 0): Stat(),
    (1, 1, 0, 1, 2, 1): Stat(),
    (1, 1, 0, 1, 2, 2): Stat(),
    (1, 1, 0, 2, 0, 0): Stat(),
    (1, 1, 0, 2, 0, 1): Stat(),
    (1, 1, 0, 2, 0, 2): Stat(),
    (1, 1, 0, 2, 1, 0): Stat(),
    (1, 1, 0, 2, 1, 1): Stat(),
    (1, 1, 0, 2, 1, 2): Stat(),
    (1, 1, 0, 2, 2, 0): Stat(),
    (1, 1, 0, 2, 2, 1): Stat(),
    (1, 1, 0, 2, 2, 2): Stat(),
    (1, 1, 1, 0, 0, 0): Stat(),
    (1, 1, 1, 0, 0, 1): Stat(),
    (1, 1, 1, 0, 0, 2): Stat(),
    (1, 1, 1, 0, 1, 0): Stat(),
    (1, 1, 1, 0, 1, 1): Stat(),
    (1, 1, 1, 0, 1, 2): Stat(),
    (1, 1, 1, 0, 2, 0): Stat(),
    (1, 1, 1, 0, 2, 1): Stat(),
    (1, 1, 1, 0, 2, 2): Stat(),
    (1, 1, 1, 1, 0, 0): Stat(),
    (1, 1, 1, 1, 0, 1): Stat(),
    (1, 1, 1, 1, 0, 2): Stat(),
    (1, 1, 1, 1, 1, 0): Stat(),
    (1, 1, 1, 1, 1, 1): Stat(),
    (1, 1, 1, 1, 1, 2): Stat(),
    (1, 1, 1, 1, 2, 0): Stat(),
    (1, 1, 1, 1, 2, 1): Stat(),
    (1, 1, 1, 1, 2, 2): Stat(),
    (1, 1, 1, 2, 0, 0): Stat(),
    (1, 1, 1, 2, 0, 1): Stat(),
    (1, 1, 1, 2, 0, 2): Stat(),
    (1, 1, 1, 2, 1, 0): Stat(),
    (1, 1, 1, 2, 1, 1): Stat(),
    (1, 1, 1, 2, 1, 2): Stat(),
    (1, 1, 1, 2, 2, 0): Stat(),
    (1, 1, 1, 2, 2, 1): Stat(),
    (1, 1, 1, 2, 2, 2): Stat(),
    (1, 1, 2, 0, 0, 0): Stat(),
    (1, 1, 2, 0, 0, 1): Stat(),
    (1, 1, 2, 0, 0, 2): Stat(),
    (1, 1, 2, 0, 1, 0): Stat(),
    (1, 1, 2, 0, 1, 1): Stat(),
    (1, 1, 2, 0, 1, 2): Stat(),
    (1, 1, 2, 0, 2, 0): Stat(),
    (1, 1, 2, 0, 2, 1): Stat(),
    (1, 1, 2, 0, 2, 2): Stat(),
    (1, 1, 2, 1, 0, 0): Stat(),
    (1, 1, 2, 1, 0, 1): Stat(),
    (1, 1, 2, 1, 0, 2): Stat(),
    (1, 1, 2, 1, 1, 0): Stat(),
    (1, 1, 2, 1, 1, 1): Stat(),
    (1, 1, 2, 1, 1, 2): Stat(),
    (1, 1, 2, 1, 2, 0): Stat(),
    (1, 1, 2, 1, 2, 1): Stat(),
    (1, 1, 2, 1, 2, 2): Stat(),
    (1, 1, 2, 2, 0, 0): Stat(),
    (1, 1, 2, 2, 0, 1): Stat(),
    (1, 1, 2, 2, 0, 2): Stat(),
    (1, 1, 2, 2, 1, 0): Stat(),
    (1, 1, 2, 2, 1, 1): Stat(),
    (1, 1, 2, 2, 1, 2): Stat(),
    (1, 1, 2, 2, 2, 0): Stat(),
    (1, 1, 2, 2, 2, 1): Stat(),
    (1, 1, 2, 2, 2, 2): Stat(),
    (1, 2, 0, 0, 0, 0): Stat(),
    (1, 2, 0, 0, 0, 1): Stat(),
    (1, 2, 0, 0, 0, 2): Stat(),
    (1, 2, 0, 0, 1, 0): Stat(),
    (1, 2, 0, 0, 1, 1): Stat(),
    (1, 2, 0, 0, 1, 2): Stat(),
    (1, 2, 0, 0, 2, 0): Stat(),
    (1, 2, 0, 0, 2, 1): Stat(),
    (1, 2, 0, 0, 2, 2): Stat(),
    (1, 2, 0, 1, 0, 0): Stat(),
    (1, 2, 0, 1, 0, 1): Stat(),
    (1, 2, 0, 1, 0, 2): Stat(),
    (1, 2, 0, 1, 1, 0): Stat(),
    (1, 2, 0, 1, 1, 1): Stat(),
    (1, 2, 0, 1, 1, 2): Stat(),
    (1, 2, 0, 1, 2, 0): Stat(),
    (1, 2, 0, 1, 2, 1): Stat(),
    (1, 2, 0, 1, 2, 2): Stat(),
    (1, 2, 0, 2, 0, 0): Stat(),
    (1, 2, 0, 2, 0, 1): Stat(),
    (1, 2, 0, 2, 0, 2): Stat(),
    (1, 2, 0, 2, 1, 0): Stat(),
    (1, 2, 0, 2, 1, 1): Stat(),
    (1, 2, 0, 2, 1, 2): Stat(),
    (1, 2, 0, 2, 2, 0): Stat(),
    (1, 2, 0, 2, 2, 1): Stat(),
    (1, 2, 0, 2, 2, 2): Stat(),
    (1, 2, 1, 0, 0, 0): Stat(),
    (1, 2, 1, 0, 0, 1): Stat(),
    (1, 2, 1, 0, 0, 2): Stat(),
    (1, 2, 1, 0, 1, 0): Stat(),
    (1, 2, 1, 0, 1, 1): Stat(),
    (1, 2, 1, 0, 1, 2): Stat(),
    (1, 2, 1, 0, 2, 0): Stat(),
    (1, 2, 1, 0, 2, 1): Stat(),
    (1, 2, 1, 0, 2, 2): Stat(),
    (1, 2, 1, 1, 0, 0): Stat(),
    (1, 2, 1, 1, 0, 1): Stat(),
    (1, 2, 1, 1, 0, 2): Stat(),
    (1, 2, 1, 1, 1, 0): Stat(),
    (1, 2, 1, 1, 1, 1): Stat(),
    (1, 2, 1, 1, 1, 2): Stat(),
    (1, 2, 1, 1, 2, 0): Stat(),
    (1, 2, 1, 1, 2, 1): Stat(),
    (1, 2, 1, 1, 2, 2): Stat(),
    (1, 2, 1, 2, 0, 0): Stat(),
    (1, 2, 1, 2, 0, 1): Stat(),
    (1, 2, 1, 2, 0, 2): Stat(),
    (1, 2, 1, 2, 1, 0): Stat(),
    (1, 2, 1, 2, 1, 1): Stat(),
    (1, 2, 1, 2, 1, 2): Stat(),
    (1, 2, 1, 2, 2, 0): Stat(),
    (1, 2, 1, 2, 2, 1): Stat(),
    (1, 2, 1, 2, 2, 2): Stat(),
    (1, 2, 2, 0, 0, 0): Stat(),
    (1, 2, 2, 0, 0, 1): Stat(),
    (1, 2, 2, 0, 0, 2): Stat(),
    (1, 2, 2, 0, 1, 0): Stat(),
    (1, 2, 2, 0, 1, 1): Stat(),
    (1, 2, 2, 0, 1, 2): Stat(),
    (1, 2, 2, 0, 2, 0): Stat(),
    (1, 2, 2, 0, 2, 1): Stat(),
    (1, 2, 2, 0, 2, 2): Stat(),
    (1, 2, 2, 1, 0, 0): Stat(),
    (1, 2, 2, 1, 0, 1): Stat(),
    (1, 2, 2, 1, 0, 2): Stat(),
    (1, 2, 2, 1, 1, 0): Stat(),
    (1, 2, 2, 1, 1, 1): Stat(),
    (1, 2, 2, 1, 1, 2): Stat(),
    (1, 2, 2, 1, 2, 0): Stat(),
    (1, 2, 2, 1, 2, 1): Stat(),
    (1, 2, 2, 1, 2, 2): Stat(),
    (1, 2, 2, 2, 0, 0): Stat(),
    (1, 2, 2, 2, 0, 1): Stat(),
    (1, 2, 2, 2, 0, 2): Stat(),
    (1, 2, 2, 2, 1, 0): Stat(),
    (1, 2, 2, 2, 1, 1): Stat(),
    (1, 2, 2, 2, 1, 2): Stat(),
    (1, 2, 2, 2, 2, 0): Stat(),
    (1, 2, 2, 2, 2, 1): Stat(),
    (1, 2, 2, 2, 2, 2): Stat(),
    (2, 0, 0, 0, 0, 0): Stat(),
    (2, 0, 0, 0, 0, 1): Stat(),
    (2, 0, 0, 0, 0, 2): Stat(),
    (2, 0, 0, 0, 1, 0): Stat(),
    (2, 0, 0, 0, 1, 1): Stat(),
    (2, 0, 0, 0, 1, 2): Stat(),
    (2, 0, 0, 0, 2, 0): Stat(),
    (2, 0, 0, 0, 2, 1): Stat(),
    (2, 0, 0, 0, 2, 2): Stat(),
    (2, 0, 0, 1, 0, 0): Stat(),
    (2, 0, 0, 1, 0, 1): Stat(),
    (2, 0, 0, 1, 0, 2): Stat(),
    (2, 0, 0, 1, 1, 0): Stat(),
    (2, 0, 0, 1, 1, 1): Stat(),
    (2, 0, 0, 1, 1, 2): Stat(),
    (2, 0, 0, 1, 2, 0): Stat(),
    (2, 0, 0, 1, 2, 1): Stat(),
    (2, 0, 0, 1, 2, 2): Stat(),
    (2, 0, 0, 2, 0, 0): Stat(),
    (2, 0, 0, 2, 0, 1): Stat(),
    (2, 0, 0, 2, 0, 2): Stat(),
    (2, 0, 0, 2, 1, 0): Stat(),
    (2, 0, 0, 2, 1, 1): Stat(),
    (2, 0, 0, 2, 1, 2): Stat(),
    (2, 0, 0, 2, 2, 0): Stat(),
    (2, 0, 0, 2, 2, 1): Stat(),
    (2, 0, 0, 2, 2, 2): Stat(),
    (2, 0, 1, 0, 0, 0): Stat(),
    (2, 0, 1, 0, 0, 1): Stat(),
    (2, 0, 1, 0, 0, 2): Stat(),
    (2, 0, 1, 0, 1, 0): Stat(),
    (2, 0, 1, 0, 1, 1): Stat(),
    (2, 0, 1, 0, 1, 2): Stat(),
    (2, 0, 1, 0, 2, 0): Stat(),
    (2, 0, 1, 0, 2, 1): Stat(),
    (2, 0, 1, 0, 2, 2): Stat(),
    (2, 0, 1, 1, 0, 0): Stat(),
    (2, 0, 1, 1, 0, 1): Stat(),
    (2, 0, 1, 1, 0, 2): Stat(),
    (2, 0, 1, 1, 1, 0): Stat(),
    (2, 0, 1, 1, 1, 1): Stat(),
    (2, 0, 1, 1, 1, 2): Stat(),
    (2, 0, 1, 1, 2, 0): Stat(),
    (2, 0, 1, 1, 2, 1): Stat(),
    (2, 0, 1, 1, 2, 2): Stat(),
    (2, 0, 1, 2, 0, 0): Stat(),
    (2, 0, 1, 2, 0, 1): Stat(),
    (2, 0, 1, 2, 0, 2): Stat(),
    (2, 0, 1, 2, 1, 0): Stat(),
    (2, 0, 1, 2, 1, 1): Stat(),
    (2, 0, 1, 2, 1, 2): Stat(),
    (2, 0, 1, 2, 2, 0): Stat(),
    (2, 0, 1, 2, 2, 1): Stat(),
    (2, 0, 1, 2, 2, 2): Stat(),
    (2, 0, 2, 0, 0, 0): Stat(),
    (2, 0, 2, 0, 0, 1): Stat(),
    (2, 0, 2, 0, 0, 2): Stat(),
    (2, 0, 2, 0, 1, 0): Stat(),
    (2, 0, 2, 0, 1, 1): Stat(),
    (2, 0, 2, 0, 1, 2): Stat(),
    (2, 0, 2, 0, 2, 0): Stat(),
    (2, 0, 2, 0, 2, 1): Stat(),
    (2, 0, 2, 0, 2, 2): Stat(),
    (2, 0, 2, 1, 0, 0): Stat(),
    (2, 0, 2, 1, 0, 1): Stat(),
    (2, 0, 2, 1, 0, 2): Stat(),
    (2, 0, 2, 1, 1, 0): Stat(),
    (2, 0, 2, 1, 1, 1): Stat(),
    (2, 0, 2, 1, 1, 2): Stat(),
    (2, 0, 2, 1, 2, 0): Stat(),
    (2, 0, 2, 1, 2, 1): Stat(),
    (2, 0, 2, 1, 2, 2): Stat(),
    (2, 0, 2, 2, 0, 0): Stat(),
    (2, 0, 2, 2, 0, 1): Stat(),
    (2, 0, 2, 2, 0, 2): Stat(),
    (2, 0, 2, 2, 1, 0): Stat(),
    (2, 0, 2, 2, 1, 1): Stat(),
    (2, 0, 2, 2, 1, 2): Stat(),
    (2, 0, 2, 2, 2, 0): Stat(),
    (2, 0, 2, 2, 2, 1): Stat(),
    (2, 0, 2, 2, 2, 2): Stat(),
    (2, 1, 0, 0, 0, 0): Stat(),
    (2, 1, 0, 0, 0, 1): Stat(),
    (2, 1, 0, 0, 0, 2): Stat(),
    (2, 1, 0, 0, 1, 0): Stat(),
    (2, 1, 0, 0, 1, 1): Stat(),
    (2, 1, 0, 0, 1, 2): Stat(),
    (2, 1, 0, 0, 2, 0): Stat(),
    (2, 1, 0, 0, 2, 1): Stat(),
    (2, 1, 0, 0, 2, 2): Stat(),
    (2, 1, 0, 1, 0, 0): Stat(),
    (2, 1, 0, 1, 0, 1): Stat(),
    (2, 1, 0, 1, 0, 2): Stat(),
    (2, 1, 0, 1, 1, 0): Stat(),
    (2, 1, 0, 1, 1, 1): Stat(),
    (2, 1, 0, 1, 1, 2): Stat(),
    (2, 1, 0, 1, 2, 0): Stat(),
    (2, 1, 0, 1, 2, 1): Stat(),
    (2, 1, 0, 1, 2, 2): Stat(),
    (2, 1, 0, 2, 0, 0): Stat(),
    (2, 1, 0, 2, 0, 1): Stat(),
    (2, 1, 0, 2, 0, 2): Stat(),
    (2, 1, 0, 2, 1, 0): Stat(),
    (2, 1, 0, 2, 1, 1): Stat(),
    (2, 1, 0, 2, 1, 2): Stat(),
    (2, 1, 0, 2, 2, 0): Stat(),
    (2, 1, 0, 2, 2, 1): Stat(),
    (2, 1, 0, 2, 2, 2): Stat(),
    (2, 1, 1, 0, 0, 0): Stat(),
    (2, 1, 1, 0, 0, 1): Stat(),
    (2, 1, 1, 0, 0, 2): Stat(),
    (2, 1, 1, 0, 1, 0): Stat(),
    (2, 1, 1, 0, 1, 1): Stat(),
    (2, 1, 1, 0, 1, 2): Stat(),
    (2, 1, 1, 0, 2, 0): Stat(),
    (2, 1, 1, 0, 2, 1): Stat(),
    (2, 1, 1, 0, 2, 2): Stat(),
    (2, 1, 1, 1, 0, 0): Stat(),
    (2, 1, 1, 1, 0, 1): Stat(),
    (2, 1, 1, 1, 0, 2): Stat(),
    (2, 1, 1, 1, 1, 0): Stat(),
    (2, 1, 1, 1, 1, 1): Stat(),
    (2, 1, 1, 1, 1, 2): Stat(),
    (2, 1, 1, 1, 2, 0): Stat(),
    (2, 1, 1, 1, 2, 1): Stat(),
    (2, 1, 1, 1, 2, 2): Stat(),
    (2, 1, 1, 2, 0, 0): Stat(),
    (2, 1, 1, 2, 0, 1): Stat(),
    (2, 1, 1, 2, 0, 2): Stat(),
    (2, 1, 1, 2, 1, 0): Stat(),
    (2, 1, 1, 2, 1, 1): Stat(),
    (2, 1, 1, 2, 1, 2): Stat(),
    (2, 1, 1, 2, 2, 0): Stat(),
    (2, 1, 1, 2, 2, 1): Stat(),
    (2, 1, 1, 2, 2, 2): Stat(),
    (2, 1, 2, 0, 0, 0): Stat(),
    (2, 1, 2, 0, 0, 1): Stat(),
    (2, 1, 2, 0, 0, 2): Stat(),
    (2, 1, 2, 0, 1, 0): Stat(),
    (2, 1, 2, 0, 1, 1): Stat(),
    (2, 1, 2, 0, 1, 2): Stat(),
    (2, 1, 2, 0, 2, 0): Stat(),
    (2, 1, 2, 0, 2, 1): Stat(),
    (2, 1, 2, 0, 2, 2): Stat(),
    (2, 1, 2, 1, 0, 0): Stat(),
    (2, 1, 2, 1, 0, 1): Stat(),
    (2, 1, 2, 1, 0, 2): Stat(),
    (2, 1, 2, 1, 1, 0): Stat(),
    (2, 1, 2, 1, 1, 1): Stat(),
    (2, 1, 2, 1, 1, 2): Stat(),
    (2, 1, 2, 1, 2, 0): Stat(),
    (2, 1, 2, 1, 2, 1): Stat(),
    (2, 1, 2, 1, 2, 2): Stat(),
    (2, 1, 2, 2, 0, 0): Stat(),
    (2, 1, 2, 2, 0, 1): Stat(),
    (2, 1, 2, 2, 0, 2): Stat(),
    (2, 1, 2, 2, 1, 0): Stat(),
    (2, 1, 2, 2, 1, 1): Stat(),
    (2, 1, 2, 2, 1, 2): Stat(),
    (2, 1, 2, 2, 2, 0): Stat(),
    (2, 1, 2, 2, 2, 1): Stat(),
    (2, 1, 2, 2, 2, 2): Stat(),
    (2, 2, 0, 0, 0, 0): Stat(),
    (2, 2, 0, 0, 0, 1): Stat(),
    (2, 2, 0, 0, 0, 2): Stat(),
    (2, 2, 0, 0, 1, 0): Stat(),
    (2, 2, 0, 0, 1, 1): Stat(),
    (2, 2, 0, 0, 1, 2): Stat(),
    (2, 2, 0, 0, 2, 0): Stat(),
    (2, 2, 0, 0, 2, 1): Stat(),
    (2, 2, 0, 0, 2, 2): Stat(),
    (2, 2, 0, 1, 0, 0): Stat(),
    (2, 2, 0, 1, 0, 1): Stat(),
    (2, 2, 0, 1, 0, 2): Stat(),
    (2, 2, 0, 1, 1, 0): Stat(),
    (2, 2, 0, 1, 1, 1): Stat(),
    (2, 2, 0, 1, 1, 2): Stat(),
    (2, 2, 0, 1, 2, 0): Stat(),
    (2, 2, 0, 1, 2, 1): Stat(),
    (2, 2, 0, 1, 2, 2): Stat(),
    (2, 2, 0, 2, 0, 0): Stat(),
    (2, 2, 0, 2, 0, 1): Stat(),
    (2, 2, 0, 2, 0, 2): Stat(),
    (2, 2, 0, 2, 1, 0): Stat(),
    (2, 2, 0, 2, 1, 1): Stat(),
    (2, 2, 0, 2, 1, 2): Stat(),
    (2, 2, 0, 2, 2, 0): Stat(),
    (2, 2, 0, 2, 2, 1): Stat(),
    (2, 2, 0, 2, 2, 2): Stat(),
    (2, 2, 1, 0, 0, 0): Stat(),
    (2, 2, 1, 0, 0, 1): Stat(),
    (2, 2, 1, 0, 0, 2): Stat(),
    (2, 2, 1, 0, 1, 0): Stat(),
    (2, 2, 1, 0, 1, 1): Stat(),
    (2, 2, 1, 0, 1, 2): Stat(),
    (2, 2, 1, 0, 2, 0): Stat(),
    (2, 2, 1, 0, 2, 1): Stat(),
    (2, 2, 1, 0, 2, 2): Stat(),
    (2, 2, 1, 1, 0, 0): Stat(),
    (2, 2, 1, 1, 0, 1): Stat(),
    (2, 2, 1, 1, 0, 2): Stat(),
    (2, 2, 1, 1, 1, 0): Stat(),
    (2, 2, 1, 1, 1, 1): Stat(),
    (2, 2, 1, 1, 1, 2): Stat(),
    (2, 2, 1, 1, 2, 0): Stat(),
    (2, 2, 1, 1, 2, 1): Stat(),
    (2, 2, 1, 1, 2, 2): Stat(),
    (2, 2, 1, 2, 0, 0): Stat(),
    (2, 2, 1, 2, 0, 1): Stat(),
    (2, 2, 1, 2, 0, 2): Stat(),
    (2, 2, 1, 2, 1, 0): Stat(),
    (2, 2, 1, 2, 1, 1): Stat(),
    (2, 2, 1, 2, 1, 2): Stat(),
    (2, 2, 1, 2, 2, 0): Stat(),
    (2, 2, 1, 2, 2, 1): Stat(),
    (2, 2, 1, 2, 2, 2): Stat(),
    (2, 2, 2, 0, 0, 0): Stat(),
    (2, 2, 2, 0, 0, 1): Stat(),
    (2, 2, 2, 0, 0, 2): Stat(),
    (2, 2, 2, 0, 1, 0): Stat(),
    (2, 2, 2, 0, 1, 1): Stat(),
    (2, 2, 2, 0, 1, 2): Stat(),
    (2, 2, 2, 0, 2, 0): Stat(),
    (2, 2, 2, 0, 2, 1): Stat(),
    (2, 2, 2, 0, 2, 2): Stat(),
    (2, 2, 2, 1, 0, 0): Stat(),
    (2, 2, 2, 1, 0, 1): Stat(),
    (2, 2, 2, 1, 0, 2): Stat(),
    (2, 2, 2, 1, 1, 0): Stat(),
    (2, 2, 2, 1, 1, 1): Stat(),
    (2, 2, 2, 1, 1, 2): Stat(),
    (2, 2, 2, 1, 2, 0): Stat(),
    (2, 2, 2, 1, 2, 1): Stat(),
    (2, 2, 2, 1, 2, 2): Stat(),
    (2, 2, 2, 2, 0, 0): Stat(),
    (2, 2, 2, 2, 0, 1): Stat(),
    (2, 2, 2, 2, 0, 2): Stat(),
    (2, 2, 2, 2, 1, 0): Stat(),
    (2, 2, 2, 2, 1, 1): Stat(),
    (2, 2, 2, 2, 1, 2): Stat(),
    (2, 2, 2, 2, 2, 0): Stat(),
    (2, 2, 2, 2, 2, 1): Stat(),
    (2, 2, 2, 2, 2, 2): Stat(),
}


#print(moves_statistics[(0,0,0,0,0,0)].n)

def simulate(size,games):
    wins = 0
    players = {1:RandomPlayer(1),2:RandomPlayer(2)}
    for _ in range(games):
        winner,loser,moves = play(players,size)
        if random.uniform(0,1) < 0.5: wins += 1 if winner == 1 else 0
        else : wins += 1 if winner == 2 else 0
        # for mov in moves[loser]:
        #     moves_statistics[mov].n += 1
        # for mov in moves[winner]:
        #     moves_statistics[mov].n += 1
        #     moves_statistics[mov].w += 1
    print(wins / games * 100)

def play(player_objects,size):
    moves = {1:[],2:[]}
    current_player = 1
    board = HexBoard(size)
    winner = 0
    while True:
        if board.check_connection(current_player):
            winner = current_player
            break
        if board.check_connection(3 - current_player):
            winner = 3 - current_player
            break
        if not board.get_possible_moves():
            winner = 0
            break
        # Impide realizar ciertos movimientos
        #while current_player == 1:
        move = player_objects[current_player].play(board)
            # if not move in forbidden_moves: break
        #moves[current_player].append(extend(move,board.board))
        board.place_piece(move[0], move[1], current_player)
        # Cambiar turno
        current_player = 3 - current_player
        
    return winner,3-winner,moves

def extend(move,board):
    i,j = move
    n = len(board)
    e = [0,0,0,0,0,0]

    e[0] = board[i][j-1] if 0<=i<n and 0<=j-1<n else 1
    e[1] = board[i+1][j-1] if 0<=i+1<n and 0<=j-1<n else 0
    e[2] = board[i+1][j] if 0<=i+1<n and 0<=j<n else 2
    e[3] = board[i][j+1] if 0<=i<n and 0<=j+1<n else 1
    e[4] = board[i-1][j+1] if 0<=i-1<n and 0<=j+1<n else 0
    e[5] = board[i-1][j] if 0<=i-1<n and 0<=j<n else 2

    return (e[0],e[1],e[2],e[3],e[4],e[5])

simulate(11,1000)
#a = [(moves_statistics[mov].w / moves_statistics[mov].n * 100,mov) for mov in moves_statistics ]
#a.sort()
#for x in a:
#    print(x)

#d["moves"] = moves_statistics
#d.close()